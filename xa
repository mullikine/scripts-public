#!/bin/bash
export TTY
# shopt -s nullglob # use for 'for' loops but not for 'ls', 'grep'

sn="$(basename "$0")"
if [ "$sn" = "xap" ]; then
    PIPE_IT=y
fi

# xargs needs this option
# --no-run-if-empty
# this script should emulate it

# -E doesn't make any sense for xargs

enforce_lines=
while [ $# -gt 0 ]; do opt="$1"; case "$opt" in
    -nl|-1) {
        enforce_lines=y
        shift
    }
    ;;

    # pipe instead of use as first argument
    -p) {
        PIPE_IT=y
        shift
    }
    ;;

    *) break;
esac; done

tf_ret="$(nix tf ret || echo /dev/null)"
trap "rm \"$tf_ret\" 2>/dev/null" 0

# my own xargs. But this is actually more like wrl

# args="$(awk1)"

if test "$PIPE_IT" = "y"; then
    awk1 | while IFS=$'\n' read -r line; do
        (
            exec </dev/tty
            if test "$enforce_lines" = "y"; then
                p "$line" | eval "$@" | awk 1
            else
                p "$line" | eval "$@"
            fi
            echo -n "$?" > "$tf_ret"
        )
    done
else
    awk1 | while IFS=$'\n' read -r line; do
        (
            # Annoyingly I don't know how to silence these errors
            # Can't simply detect for presence of /dev/tty
            {
                exec </dev/tty
            } 2>/dev/null
            if test "$enforce_lines" = "y"; then
                eval "$@" "$line" | awk 1
            else
                eval "$@" "$line"
            fi
            echo -n "$?" > "$tf_ret"
        )
    done
fi

exit "$(cat "$tf_ret")"
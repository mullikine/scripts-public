#!/bin/bash
export TTY

platform="$1"
: ${platform:="staging"}

platform="$(printf -- "%s" "$platform" | sed 's/^dev-//')"

# This also accepts dev-paas, etc
case "$platform" in
    *paas|*platform|*prod) {
        platform_key=prod
    }
    ;;

    *staging) {
        platform_key=staging
    }
    ;;

    dev) {
        platform_key=staging
    }
    ;;

    *)
esac

# : ${platform_key:="staging"}

user="$(cat $HOME/.clrc.yaml | yq -r ".lingo.${platform_key}.user // empty")"
pass="$(cat $HOME/.clrc.yaml | yq -r ".lingo.${platform_key}.pass // empty")"

if test -z "$user" || test -z "$pass"; then
    echo "Could not set user and password." 1>&2
    exit 1
fi

read -r -d '' expect_script <<HEREDOC
#!/usr/bin/expect -f

set timeout -1
spawn lingo config setup
match_max 100000
expect -exact "Please sign in to https://www.codelingo.io/settings/profile to generate a new Token linked with your CodeLingo User account.\r
Enter Your CodeLingo Username: "
send -- "$user\r"
expect -exact "$user\r
Enter User-Token:"
send -- "$pass\r"
expect eof
HEREDOC

expect <(printf -- "%s\n" "$expect_script") 2>&1 | sed 's/:\(.*\)/:***/'